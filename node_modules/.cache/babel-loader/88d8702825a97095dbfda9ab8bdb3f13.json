{"ast":null,"code":"import { FETCH_ALL, FETCH_BY_SEARCH, START_LOADING, END_LOADING, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nimport * as api from '../api'; // Action Creators\n// redux thunk for async actions\n\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["FETCH_ALL","FETCH_BY_SEARCH","START_LOADING","END_LOADING","CREATE","UPDATE","DELETE","LIKE","api","getPosts","page","dispatch","type","data","fetchPosts","payload","error","console","log","message","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","updatePost","id","likePost","deletePost"],"sources":["/Users/EdwardC/Desktop/liminalproject/liminal_project/client/src/actions/posts.js"],"sourcesContent":["import { FETCH_ALL, FETCH_BY_SEARCH, START_LOADING, END_LOADING, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nimport * as api from '../api';\n\n// Action Creators\n// redux thunk for async actions\nexport const getPosts = (page) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING })\n        const { data } = await api.fetchPosts(page);\n\n        dispatch({ type: FETCH_ALL, payload: data });\n        dispatch({ type: END_LOADING })\n    } catch (error) {\n        console.log(error.message);\n    }\n}\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING })\n        const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\n\n        dispatch({ type: FETCH_BY_SEARCH, payload: data });\n        dispatch({ type: END_LOADING })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING })\n        const { data } = await api.createPost(post);\n        dispatch({ type: CREATE, payload: data });\n        dispatch({ type: END_LOADING })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        const { data } = await api.updatePost(id, post);\n        dispatch({ type: UPDATE, payload: data });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const likePost = (id) => async (dispatch) => {\n    try {\n      const { data } = await api.likePost(id);\n  \n      dispatch({ type: LIKE, payload: data });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id);\n        dispatch({ type: DELETE, payload: id })\n    } catch (error) {\n        console.log(error);\n    }\n}"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,eAApB,EAAqCC,aAArC,EAAoDC,WAApD,EAAiEC,MAAjE,EAAyEC,MAAzE,EAAiFC,MAAjF,EAAyFC,IAAzF,QAAqG,0BAArG;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB,C,CAEA;AACA;;AACA,OAAO,MAAMC,QAAQ,GAAIC,IAAD,IAAU,MAAOC,QAAP,IAAoB;EAClD,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAEV;IAAR,CAAD,CAAR;IACA,MAAM;MAAEW;IAAF,IAAW,MAAML,GAAG,CAACM,UAAJ,CAAeJ,IAAf,CAAvB;IAEAC,QAAQ,CAAC;MAAEC,IAAI,EAAEZ,SAAR;MAAmBe,OAAO,EAAEF;IAA5B,CAAD,CAAR;IACAF,QAAQ,CAAC;MAAEC,IAAI,EAAET;IAAR,CAAD,CAAR;EACH,CAND,CAME,OAAOa,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;EACH;AACJ,CAVM;AAYP,OAAO,MAAMC,gBAAgB,GAAIC,WAAD,IAAiB,MAAOV,QAAP,IAAoB;EACjE,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAEV;IAAR,CAAD,CAAR;IACA,MAAM;MAAEW,IAAI,EAAE;QAAEA;MAAF;IAAR,IAAqB,MAAML,GAAG,CAACc,kBAAJ,CAAuBD,WAAvB,CAAjC;IAEAV,QAAQ,CAAC;MAAEC,IAAI,EAAEX,eAAR;MAAyBc,OAAO,EAAEF;IAAlC,CAAD,CAAR;IACAF,QAAQ,CAAC;MAAEC,IAAI,EAAET;IAAR,CAAD,CAAR;EACH,CAND,CAME,OAAOa,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAVM;AAYP,OAAO,MAAMO,UAAU,GAAIC,IAAD,IAAU,MAAOb,QAAP,IAAoB;EACpD,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAEV;IAAR,CAAD,CAAR;IACA,MAAM;MAAEW;IAAF,IAAW,MAAML,GAAG,CAACe,UAAJ,CAAeC,IAAf,CAAvB;IACAb,QAAQ,CAAC;MAAEC,IAAI,EAAER,MAAR;MAAgBW,OAAO,EAAEF;IAAzB,CAAD,CAAR;IACAF,QAAQ,CAAC;MAAEC,IAAI,EAAET;IAAR,CAAD,CAAR;EACH,CALD,CAKE,OAAOa,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CATM;AAWP,OAAO,MAAMS,UAAU,GAAG,CAACC,EAAD,EAAKF,IAAL,KAAc,MAAOb,QAAP,IAAoB;EACxD,IAAI;IACA,MAAM;MAAEE;IAAF,IAAW,MAAML,GAAG,CAACiB,UAAJ,CAAeC,EAAf,EAAmBF,IAAnB,CAAvB;IACAb,QAAQ,CAAC;MAAEC,IAAI,EAAEP,MAAR;MAAgBU,OAAO,EAAEF;IAAzB,CAAD,CAAR;EACH,CAHD,CAGE,OAAOG,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAPM;AASP,OAAO,MAAMW,QAAQ,GAAID,EAAD,IAAQ,MAAOf,QAAP,IAAoB;EAChD,IAAI;IACF,MAAM;MAAEE;IAAF,IAAW,MAAML,GAAG,CAACmB,QAAJ,CAAaD,EAAb,CAAvB;IAEAf,QAAQ,CAAC;MAAEC,IAAI,EAAEL,IAAR;MAAcQ,OAAO,EAAEF;IAAvB,CAAD,CAAR;EACD,CAJD,CAIE,OAAOG,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;EACD;AACF,CARI;AAUP,OAAO,MAAMS,UAAU,GAAIF,EAAD,IAAQ,MAAOf,QAAP,IAAoB;EAClD,IAAI;IACA,MAAMH,GAAG,CAACoB,UAAJ,CAAeF,EAAf,CAAN;IACAf,QAAQ,CAAC;MAAEC,IAAI,EAAEN,MAAR;MAAgBS,OAAO,EAAEW;IAAzB,CAAD,CAAR;EACH,CAHD,CAGE,OAAOV,KAAP,EAAc;IACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAPM"},"metadata":{},"sourceType":"module"}