{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:5000'\n}); //happens to each request, happens before every req on the bottom\n\nAPI.interceptors.request.use(req => {\n  //sending token back to backend so middleware can verify\n  //add header to req\n  if (localStorage.getItem('profile')) {\n    req.headers.authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n  }\n\n  return req;\n}); //sending to endposts ex:localhost:300/posts\n\nexport const fetchPosts = page => API.get(`/posts?page=${page}`);\nexport const fetchPostsBySearch = searchQuery => API.get(`/posts/search?searchQuery=${searchQuery.search || 'none'}&tags=${searchQuery.tags}`);\nexport const createPost = newPost => API.post('/posts', newPost);\nexport const likePost = id => API.patch(`/posts/${id}/likePost`);\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = id => API.delete(`/posts/${id}`);\nexport const signIn = formData => API.post('/user/signin', formData);\nexport const signUp = formData => API.post('/user/signup', formData);","map":{"version":3,"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","authorization","JSON","parse","token","fetchPosts","page","get","fetchPostsBySearch","searchQuery","search","tags","createPost","newPost","post","likePost","id","patch","updatePost","updatedPost","deletePost","delete","signIn","formData","signUp"],"sources":["/Users/EdwardC/Desktop/liminalproject/liminal_project/client/src/api/index.js"],"sourcesContent":["import axios from 'axios';\n\nconst API = axios.create({ baseURL: 'http://localhost:5000' });\n\n//happens to each request, happens before every req on the bottom\nAPI.interceptors.request.use((req) => {\n    //sending token back to backend so middleware can verify\n    //add header to req\n    if(localStorage.getItem('profile')) {\n        req.headers.authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n    }\n\n    return req;\n})\n\n//sending to endposts ex:localhost:300/posts\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`);\nexport const fetchPostsBySearch = (searchQuery) => API.get(`/posts/search?searchQuery=${searchQuery.search || 'none'}&tags=${searchQuery.tags}`) \nexport const createPost = (newPost) => API.post('/posts', newPost);\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\n\nexport const signIn = (formData) => API.post('/user/signin', formData);\nexport const signUp = (formData) => API.post('/user/signup', formData);"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;EAAEC,OAAO,EAAE;AAAX,CAAb,CAAZ,C,CAEA;;AACAF,GAAG,CAACG,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA8BC,GAAD,IAAS;EAClC;EACA;EACA,IAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAH,EAAoC;IAChCF,GAAG,CAACG,OAAJ,CAAYC,aAAZ,GAA6B,UAASC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,EAA4CK,KAAM,EAAxF;EACH;;EAED,OAAOP,GAAP;AACH,CARD,E,CAUA;;AACA,OAAO,MAAMQ,UAAU,GAAIC,IAAD,IAAUf,GAAG,CAACgB,GAAJ,CAAS,eAAcD,IAAK,EAA5B,CAA7B;AACP,OAAO,MAAME,kBAAkB,GAAIC,WAAD,IAAiBlB,GAAG,CAACgB,GAAJ,CAAS,6BAA4BE,WAAW,CAACC,MAAZ,IAAsB,MAAO,SAAQD,WAAW,CAACE,IAAK,EAA3F,CAA5C;AACP,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAAatB,GAAG,CAACuB,IAAJ,CAAS,QAAT,EAAmBD,OAAnB,CAAhC;AACP,OAAO,MAAME,QAAQ,GAAIC,EAAD,IAAQzB,GAAG,CAAC0B,KAAJ,CAAW,UAASD,EAAG,WAAvB,CAAzB;AACP,OAAO,MAAME,UAAU,GAAG,CAACF,EAAD,EAAKG,WAAL,KAAqB5B,GAAG,CAAC0B,KAAJ,CAAW,UAASD,EAAG,EAAvB,EAA0BG,WAA1B,CAAxC;AACP,OAAO,MAAMC,UAAU,GAAIJ,EAAD,IAAQzB,GAAG,CAAC8B,MAAJ,CAAY,UAASL,EAAG,EAAxB,CAA3B;AAEP,OAAO,MAAMM,MAAM,GAAIC,QAAD,IAAchC,GAAG,CAACuB,IAAJ,CAAS,cAAT,EAAyBS,QAAzB,CAA7B;AACP,OAAO,MAAMC,MAAM,GAAID,QAAD,IAAchC,GAAG,CAACuB,IAAJ,CAAS,cAAT,EAAyBS,QAAzB,CAA7B"},"metadata":{},"sourceType":"module"}