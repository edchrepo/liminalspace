{"ast":null,"code":"import { FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, START_LOADING, END_LOADING, CREATE, UPDATE, DELETE, LIKE, COMMENT } from '../constants/actionTypes';\nimport * as api from '../api'; // Action Creators\n// redux thunk for async actions\n\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n    dispatch({\n      type: FETCH_POST,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = (post, history) => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    history.push(`/posts/${data._id}`);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const commentPost = (value, id) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.comment(value, id);\n    dispatch({\n      type: COMMENT,\n      payload: data\n    });\n    return data.comments;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["FETCH_ALL","FETCH_POST","FETCH_BY_SEARCH","START_LOADING","END_LOADING","CREATE","UPDATE","DELETE","LIKE","COMMENT","api","getPost","id","dispatch","type","data","fetchPost","payload","error","console","log","message","getPosts","page","fetchPosts","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","history","push","_id","updatePost","likePost","commentPost","value","comment","comments","deletePost"],"sources":["/Users/EdwardC/Desktop/liminalproject/liminal_project/client/src/actions/posts.js"],"sourcesContent":["import { FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, START_LOADING, END_LOADING, CREATE, UPDATE, DELETE, LIKE, COMMENT } from '../constants/actionTypes';\nimport * as api from '../api';\n\n// Action Creators\n// redux thunk for async actions\nexport const getPost = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING })\n        const { data } = await api.fetchPost(id);\n\n        dispatch({ type: FETCH_POST, payload: data });\n        dispatch({ type: END_LOADING })\n    } catch (error) {\n        console.log(error.message);\n    }\n}\n\nexport const getPosts = (page) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING })\n        const { data } = await api.fetchPosts(page);\n\n        dispatch({ type: FETCH_ALL, payload: data });\n        dispatch({ type: END_LOADING })\n    } catch (error) {\n        console.log(error.message);\n    }\n}\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING })\n        const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\n\n        dispatch({ type: FETCH_BY_SEARCH, payload: data });\n        dispatch({ type: END_LOADING })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const createPost = (post, history) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING })\n        const { data } = await api.createPost(post);\n        history.push(`/posts/${data._id}`)\n        dispatch({ type: CREATE, payload: data });\n        dispatch({ type: END_LOADING })\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        const { data } = await api.updatePost(id, post);\n        dispatch({ type: UPDATE, payload: data });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const likePost = (id) => async (dispatch) => {\n    try {\n      const { data } = await api.likePost(id);\n  \n      dispatch({ type: LIKE, payload: data });\n    } catch (error) {\n      console.log(error.message);\n    }\n};\n\nexport const commentPost = (value, id) => async (dispatch) => {\n    try {\n        const { data } = await api.comment(value, id);\n\n        dispatch({ type: COMMENT, payload: data });\n\n        return data.comments;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id);\n        dispatch({ type: DELETE, payload: id })\n    } catch (error) {\n        console.log(error);\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}